services:
  #  frontend
  app:
    image: todo-frontend
    build:
      context: ./todo-frontend/ # The context will pick this directory as the "build context"
      dockerfile: ./Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend/:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 3001:80
    container_name: todo-frontend # This will name the container hello-front-dev
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080/api

  #  backend
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js # bind mount - mongo-init.js in the mongo folder of the host machine is the same as the mongo-init.js file in the container's /docker-entrypoint-initdb.d
      - ./todo-backend/mongo_data:/data/db # to persist data even after stopping and rerunning container / storing data outside of container
  redis:
    image: redis
    ports:
      - 6379:6379
    command: [ 'redis-server', '--appendonly', 'yes' ] # Overwrite the CMD
    volumes: # Declare the volume
      - ./todo-backend/redis_data:/data
  #  debug-helper:
  #    image: busybox
  server:
    image: todo-backend
    ports:
      - 3000:3000
    build:
      context: ./todo-backend/ # The context will pick this directory as the "build context"
      dockerfile: ./Dockerfile # This will simply tell which dockerfile to read
    environment:
      REDIS_URL: redis://redis:6379
      MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database # THE port mapping - container port must be used!
    volumes: # Declare the volume
      - ./todo-backend/:/usr/src/app
    container_name: todo-backend


  #  reverse proxy
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app
      - server